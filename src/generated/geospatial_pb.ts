// @generated by protoc-gen-es v2.6.1 with parameter "target=ts"
// @generated from file geospatial.proto (package geospatial, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file geospatial.proto.
 */
export const file_geospatial: GenFile = /*@__PURE__*/
  fileDesc("ChBnZW9zcGF0aWFsLnByb3RvEgpnZW9zcGF0aWFsIlUKCkNvb3JkaW5hdGUSEAoIbGF0aXR1ZGUYASABKAESEQoJbG9uZ2l0dWRlGAIgASgBEhUKCGFsdGl0dWRlGAMgASgBSACIAQFCCwoJX2FsdGl0dWRlImMKC0JvdW5kaW5nQm94EikKCW5vcnRoZWFzdBgBIAEoCzIWLmdlb3NwYXRpYWwuQ29vcmRpbmF0ZRIpCglzb3V0aHdlc3QYAiABKAsyFi5nZW9zcGF0aWFsLkNvb3JkaW5hdGUi4AEKEUdlb3NwYXRpYWxGZWF0dXJlEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSKAoIbG9jYXRpb24YAyABKAsyFi5nZW9zcGF0aWFsLkNvb3JkaW5hdGUSQQoKcHJvcGVydGllcxgEIAMoCzItLmdlb3NwYXRpYWwuR2Vvc3BhdGlhbEZlYXR1cmUuUHJvcGVydGllc0VudHJ5EhEKCXRpbWVzdGFtcBgFIAEoAxoxCg9Qcm9wZXJ0aWVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLZAQoJRGF0YVBvaW50EgoKAmlkGAEgASgJEigKCGxvY2F0aW9uGAIgASgLMhYuZ2Vvc3BhdGlhbC5Db29yZGluYXRlEg0KBXZhbHVlGAMgASgBEgwKBHVuaXQYBCABKAkSEQoJdGltZXN0YW1wGAUgASgDEjUKCG1ldGFkYXRhGAYgAygLMiMuZ2Vvc3BhdGlhbC5EYXRhUG9pbnQuTWV0YWRhdGFFbnRyeRovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiJAoRSGVsbG9Xb3JsZFJlcXVlc3QSDwoHbWVzc2FnZRgBIAEoCSIlChJIZWxsb1dvcmxkUmVzcG9uc2USDwoHbWVzc2FnZRgBIAEoCSI4ChRFY2hvUGFyYW1ldGVyUmVxdWVzdBINCgV2YWx1ZRgBIAEoARIRCglvcGVyYXRpb24YAiABKAkiWwoVRWNob1BhcmFtZXRlclJlc3BvbnNlEhYKDm9yaWdpbmFsX3ZhbHVlGAEgASgBEhcKD3Byb2Nlc3NlZF92YWx1ZRgCIAEoARIRCglvcGVyYXRpb24YAyABKAkiYwoSR2V0RmVhdHVyZXNSZXF1ZXN0EicKBmJvdW5kcxgBIAEoCzIXLmdlb3NwYXRpYWwuQm91bmRpbmdCb3gSFQoNZmVhdHVyZV90eXBlcxgCIAMoCRINCgVsaW1pdBgDIAEoBSJbChNHZXRGZWF0dXJlc1Jlc3BvbnNlEi8KCGZlYXR1cmVzGAEgAygLMh0uZ2Vvc3BhdGlhbC5HZW9zcGF0aWFsRmVhdHVyZRITCgt0b3RhbF9jb3VudBgCIAEoBSJvChFTdHJlYW1EYXRhUmVxdWVzdBInCgZib3VuZHMYASABKAsyFy5nZW9zcGF0aWFsLkJvdW5kaW5nQm94EhIKCmRhdGFfdHlwZXMYAiADKAkSHQoVbWF4X3BvaW50c19wZXJfc2Vjb25kGAMgASgFInoKE0dldEJhdGNoRGF0YVJlcXVlc3QSJwoGYm91bmRzGAEgASgLMhcuZ2Vvc3BhdGlhbC5Cb3VuZGluZ0JveBISCgpkYXRhX3R5cGVzGAIgAygJEhIKCm1heF9wb2ludHMYAyABKAUSEgoKcmVzb2x1dGlvbhgEIAEoBSJyChRHZXRCYXRjaERhdGFSZXNwb25zZRIqCgtkYXRhX3BvaW50cxgBIAMoCzIVLmdlb3NwYXRpYWwuRGF0YVBvaW50EhMKC3RvdGFsX2NvdW50GAIgASgFEhkKEWdlbmVyYXRpb25fbWV0aG9kGAMgASgJIqIBChJPcHRpbWl6ZWREYXRhUG9pbnQSCgoCaWQYASABKAkSEAoIbGF0aXR1ZGUYAiABKAISEQoJbG9uZ2l0dWRlGAMgASgCEhAKCGFsdGl0dWRlGAQgASgCEg0KBXZhbHVlGAUgASgCEgwKBHVuaXQYBiABKAkSEQoJdGltZXN0YW1wGAcgASgDEhkKEWdlbmVyYXRpb25fbWV0aG9kGAggASgJIoQBCh1HZXRCYXRjaERhdGFPcHRpbWl6ZWRSZXNwb25zZRIzCgtkYXRhX3BvaW50cxgBIAMoCzIeLmdlb3NwYXRpYWwuT3B0aW1pemVkRGF0YVBvaW50EhMKC3RvdGFsX2NvdW50GAIgASgFEhkKEWdlbmVyYXRpb25fbWV0aG9kGAMgASgJIrcBChFHZXRCYXRjaERhdGFDaHVuaxIqCgtkYXRhX3BvaW50cxgBIAMoCzIVLmdlb3NwYXRpYWwuRGF0YVBvaW50EhQKDGNodW5rX251bWJlchgCIAEoBRIUCgx0b3RhbF9jaHVua3MYAyABKAUSFwoPcG9pbnRzX2luX2NodW5rGAQgASgFEhYKDmlzX2ZpbmFsX2NodW5rGAUgASgIEhkKEWdlbmVyYXRpb25fbWV0aG9kGAYgASgJIhQKEkhlYWx0aENoZWNrUmVxdWVzdCKjAQoTSGVhbHRoQ2hlY2tSZXNwb25zZRIPCgdoZWFsdGh5GAEgASgIEg8KB3ZlcnNpb24YAiABKAkSOwoGc3RhdHVzGAMgAygLMisuZ2Vvc3BhdGlhbC5IZWFsdGhDaGVja1Jlc3BvbnNlLlN0YXR1c0VudHJ5Gi0KC1N0YXR1c0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEysAMKEUdlb3NwYXRpYWxTZXJ2aWNlEksKCkhlbGxvV29ybGQSHS5nZW9zcGF0aWFsLkhlbGxvV29ybGRSZXF1ZXN0Gh4uZ2Vvc3BhdGlhbC5IZWxsb1dvcmxkUmVzcG9uc2USVAoNRWNob1BhcmFtZXRlchIgLmdlb3NwYXRpYWwuRWNob1BhcmFtZXRlclJlcXVlc3QaIS5nZW9zcGF0aWFsLkVjaG9QYXJhbWV0ZXJSZXNwb25zZRJOCgtIZWFsdGhDaGVjaxIeLmdlb3NwYXRpYWwuSGVhbHRoQ2hlY2tSZXF1ZXN0Gh8uZ2Vvc3BhdGlhbC5IZWFsdGhDaGVja1Jlc3BvbnNlEk4KC0dldEZlYXR1cmVzEh4uZ2Vvc3BhdGlhbC5HZXRGZWF0dXJlc1JlcXVlc3QaHy5nZW9zcGF0aWFsLkdldEZlYXR1cmVzUmVzcG9uc2USWAoUR2V0QmF0Y2hEYXRhU3RyZWFtZWQSHy5nZW9zcGF0aWFsLkdldEJhdGNoRGF0YVJlcXVlc3QaHS5nZW9zcGF0aWFsLkdldEJhdGNoRGF0YUNodW5rMAFiBnByb3RvMw");

/**
 * @generated from message geospatial.Coordinate
 */
export type Coordinate = Message<"geospatial.Coordinate"> & {
  /**
   * @generated from field: double latitude = 1;
   */
  latitude: number;

  /**
   * @generated from field: double longitude = 2;
   */
  longitude: number;

  /**
   * @generated from field: optional double altitude = 3;
   */
  altitude?: number;
};

/**
 * Describes the message geospatial.Coordinate.
 * Use `create(CoordinateSchema)` to create a new message.
 */
export const CoordinateSchema: GenMessage<Coordinate> = /*@__PURE__*/
  messageDesc(file_geospatial, 0);

/**
 * @generated from message geospatial.BoundingBox
 */
export type BoundingBox = Message<"geospatial.BoundingBox"> & {
  /**
   * @generated from field: geospatial.Coordinate northeast = 1;
   */
  northeast?: Coordinate;

  /**
   * @generated from field: geospatial.Coordinate southwest = 2;
   */
  southwest?: Coordinate;
};

/**
 * Describes the message geospatial.BoundingBox.
 * Use `create(BoundingBoxSchema)` to create a new message.
 */
export const BoundingBoxSchema: GenMessage<BoundingBox> = /*@__PURE__*/
  messageDesc(file_geospatial, 1);

/**
 * @generated from message geospatial.GeospatialFeature
 */
export type GeospatialFeature = Message<"geospatial.GeospatialFeature"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: geospatial.Coordinate location = 3;
   */
  location?: Coordinate;

  /**
   * @generated from field: map<string, string> properties = 4;
   */
  properties: { [key: string]: string };

  /**
   * @generated from field: int64 timestamp = 5;
   */
  timestamp: bigint;
};

/**
 * Describes the message geospatial.GeospatialFeature.
 * Use `create(GeospatialFeatureSchema)` to create a new message.
 */
export const GeospatialFeatureSchema: GenMessage<GeospatialFeature> = /*@__PURE__*/
  messageDesc(file_geospatial, 2);

/**
 * @generated from message geospatial.DataPoint
 */
export type DataPoint = Message<"geospatial.DataPoint"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: geospatial.Coordinate location = 2;
   */
  location?: Coordinate;

  /**
   * @generated from field: double value = 3;
   */
  value: number;

  /**
   * @generated from field: string unit = 4;
   */
  unit: string;

  /**
   * @generated from field: int64 timestamp = 5;
   */
  timestamp: bigint;

  /**
   * @generated from field: map<string, string> metadata = 6;
   */
  metadata: { [key: string]: string };
};

/**
 * Describes the message geospatial.DataPoint.
 * Use `create(DataPointSchema)` to create a new message.
 */
export const DataPointSchema: GenMessage<DataPoint> = /*@__PURE__*/
  messageDesc(file_geospatial, 3);

/**
 * Simple Hello World example
 *
 * @generated from message geospatial.HelloWorldRequest
 */
export type HelloWorldRequest = Message<"geospatial.HelloWorldRequest"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message geospatial.HelloWorldRequest.
 * Use `create(HelloWorldRequestSchema)` to create a new message.
 */
export const HelloWorldRequestSchema: GenMessage<HelloWorldRequest> = /*@__PURE__*/
  messageDesc(file_geospatial, 4);

/**
 * @generated from message geospatial.HelloWorldResponse
 */
export type HelloWorldResponse = Message<"geospatial.HelloWorldResponse"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;
};

/**
 * Describes the message geospatial.HelloWorldResponse.
 * Use `create(HelloWorldResponseSchema)` to create a new message.
 */
export const HelloWorldResponseSchema: GenMessage<HelloWorldResponse> = /*@__PURE__*/
  messageDesc(file_geospatial, 5);

/**
 * Echo Parameter example
 *
 * @generated from message geospatial.EchoParameterRequest
 */
export type EchoParameterRequest = Message<"geospatial.EchoParameterRequest"> & {
  /**
   * @generated from field: double value = 1;
   */
  value: number;

  /**
   * @generated from field: string operation = 2;
   */
  operation: string;
};

/**
 * Describes the message geospatial.EchoParameterRequest.
 * Use `create(EchoParameterRequestSchema)` to create a new message.
 */
export const EchoParameterRequestSchema: GenMessage<EchoParameterRequest> = /*@__PURE__*/
  messageDesc(file_geospatial, 6);

/**
 * @generated from message geospatial.EchoParameterResponse
 */
export type EchoParameterResponse = Message<"geospatial.EchoParameterResponse"> & {
  /**
   * @generated from field: double original_value = 1;
   */
  originalValue: number;

  /**
   * @generated from field: double processed_value = 2;
   */
  processedValue: number;

  /**
   * @generated from field: string operation = 3;
   */
  operation: string;
};

/**
 * Describes the message geospatial.EchoParameterResponse.
 * Use `create(EchoParameterResponseSchema)` to create a new message.
 */
export const EchoParameterResponseSchema: GenMessage<EchoParameterResponse> = /*@__PURE__*/
  messageDesc(file_geospatial, 7);

/**
 * @generated from message geospatial.GetFeaturesRequest
 */
export type GetFeaturesRequest = Message<"geospatial.GetFeaturesRequest"> & {
  /**
   * @generated from field: geospatial.BoundingBox bounds = 1;
   */
  bounds?: BoundingBox;

  /**
   * @generated from field: repeated string feature_types = 2;
   */
  featureTypes: string[];

  /**
   * @generated from field: int32 limit = 3;
   */
  limit: number;
};

/**
 * Describes the message geospatial.GetFeaturesRequest.
 * Use `create(GetFeaturesRequestSchema)` to create a new message.
 */
export const GetFeaturesRequestSchema: GenMessage<GetFeaturesRequest> = /*@__PURE__*/
  messageDesc(file_geospatial, 8);

/**
 * @generated from message geospatial.GetFeaturesResponse
 */
export type GetFeaturesResponse = Message<"geospatial.GetFeaturesResponse"> & {
  /**
   * @generated from field: repeated geospatial.GeospatialFeature features = 1;
   */
  features: GeospatialFeature[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;
};

/**
 * Describes the message geospatial.GetFeaturesResponse.
 * Use `create(GetFeaturesResponseSchema)` to create a new message.
 */
export const GetFeaturesResponseSchema: GenMessage<GetFeaturesResponse> = /*@__PURE__*/
  messageDesc(file_geospatial, 9);

/**
 * @generated from message geospatial.StreamDataRequest
 */
export type StreamDataRequest = Message<"geospatial.StreamDataRequest"> & {
  /**
   * @generated from field: geospatial.BoundingBox bounds = 1;
   */
  bounds?: BoundingBox;

  /**
   * @generated from field: repeated string data_types = 2;
   */
  dataTypes: string[];

  /**
   * @generated from field: int32 max_points_per_second = 3;
   */
  maxPointsPerSecond: number;
};

/**
 * Describes the message geospatial.StreamDataRequest.
 * Use `create(StreamDataRequestSchema)` to create a new message.
 */
export const StreamDataRequestSchema: GenMessage<StreamDataRequest> = /*@__PURE__*/
  messageDesc(file_geospatial, 10);

/**
 * @generated from message geospatial.GetBatchDataRequest
 */
export type GetBatchDataRequest = Message<"geospatial.GetBatchDataRequest"> & {
  /**
   * @generated from field: geospatial.BoundingBox bounds = 1;
   */
  bounds?: BoundingBox;

  /**
   * @generated from field: repeated string data_types = 2;
   */
  dataTypes: string[];

  /**
   * @generated from field: int32 max_points = 3;
   */
  maxPoints: number;

  /**
   * Grid resolution for generated data
   *
   * @generated from field: int32 resolution = 4;
   */
  resolution: number;
};

/**
 * Describes the message geospatial.GetBatchDataRequest.
 * Use `create(GetBatchDataRequestSchema)` to create a new message.
 */
export const GetBatchDataRequestSchema: GenMessage<GetBatchDataRequest> = /*@__PURE__*/
  messageDesc(file_geospatial, 11);

/**
 * @generated from message geospatial.GetBatchDataResponse
 */
export type GetBatchDataResponse = Message<"geospatial.GetBatchDataResponse"> & {
  /**
   * @generated from field: repeated geospatial.DataPoint data_points = 1;
   */
  dataPoints: DataPoint[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  /**
   * @generated from field: string generation_method = 3;
   */
  generationMethod: string;
};

/**
 * Describes the message geospatial.GetBatchDataResponse.
 * Use `create(GetBatchDataResponseSchema)` to create a new message.
 */
export const GetBatchDataResponseSchema: GenMessage<GetBatchDataResponse> = /*@__PURE__*/
  messageDesc(file_geospatial, 12);

/**
 * Optimized data format messages
 *
 * @generated from message geospatial.OptimizedDataPoint
 */
export type OptimizedDataPoint = Message<"geospatial.OptimizedDataPoint"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * float32 instead of double
   *
   * @generated from field: float latitude = 2;
   */
  latitude: number;

  /**
   * float32 instead of double
   *
   * @generated from field: float longitude = 3;
   */
  longitude: number;

  /**
   * float32 instead of double
   *
   * @generated from field: float altitude = 4;
   */
  altitude: number;

  /**
   * float32 instead of double
   *
   * @generated from field: float value = 5;
   */
  value: number;

  /**
   * @generated from field: string unit = 6;
   */
  unit: string;

  /**
   * @generated from field: int64 timestamp = 7;
   */
  timestamp: bigint;

  /**
   * Flattened metadata
   *
   * @generated from field: string generation_method = 8;
   */
  generationMethod: string;
};

/**
 * Describes the message geospatial.OptimizedDataPoint.
 * Use `create(OptimizedDataPointSchema)` to create a new message.
 */
export const OptimizedDataPointSchema: GenMessage<OptimizedDataPoint> = /*@__PURE__*/
  messageDesc(file_geospatial, 13);

/**
 * @generated from message geospatial.GetBatchDataOptimizedResponse
 */
export type GetBatchDataOptimizedResponse = Message<"geospatial.GetBatchDataOptimizedResponse"> & {
  /**
   * @generated from field: repeated geospatial.OptimizedDataPoint data_points = 1;
   */
  dataPoints: OptimizedDataPoint[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  /**
   * @generated from field: string generation_method = 3;
   */
  generationMethod: string;
};

/**
 * Describes the message geospatial.GetBatchDataOptimizedResponse.
 * Use `create(GetBatchDataOptimizedResponseSchema)` to create a new message.
 */
export const GetBatchDataOptimizedResponseSchema: GenMessage<GetBatchDataOptimizedResponse> = /*@__PURE__*/
  messageDesc(file_geospatial, 14);

/**
 * Chunked streaming messages  
 *
 * @generated from message geospatial.GetBatchDataChunk
 */
export type GetBatchDataChunk = Message<"geospatial.GetBatchDataChunk"> & {
  /**
   * @generated from field: repeated geospatial.DataPoint data_points = 1;
   */
  dataPoints: DataPoint[];

  /**
   * @generated from field: int32 chunk_number = 2;
   */
  chunkNumber: number;

  /**
   * @generated from field: int32 total_chunks = 3;
   */
  totalChunks: number;

  /**
   * @generated from field: int32 points_in_chunk = 4;
   */
  pointsInChunk: number;

  /**
   * @generated from field: bool is_final_chunk = 5;
   */
  isFinalChunk: boolean;

  /**
   * @generated from field: string generation_method = 6;
   */
  generationMethod: string;
};

/**
 * Describes the message geospatial.GetBatchDataChunk.
 * Use `create(GetBatchDataChunkSchema)` to create a new message.
 */
export const GetBatchDataChunkSchema: GenMessage<GetBatchDataChunk> = /*@__PURE__*/
  messageDesc(file_geospatial, 15);

/**
 * @generated from message geospatial.HealthCheckRequest
 */
export type HealthCheckRequest = Message<"geospatial.HealthCheckRequest"> & {
};

/**
 * Describes the message geospatial.HealthCheckRequest.
 * Use `create(HealthCheckRequestSchema)` to create a new message.
 */
export const HealthCheckRequestSchema: GenMessage<HealthCheckRequest> = /*@__PURE__*/
  messageDesc(file_geospatial, 16);

/**
 * @generated from message geospatial.HealthCheckResponse
 */
export type HealthCheckResponse = Message<"geospatial.HealthCheckResponse"> & {
  /**
   * @generated from field: bool healthy = 1;
   */
  healthy: boolean;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: map<string, string> status = 3;
   */
  status: { [key: string]: string };
};

/**
 * Describes the message geospatial.HealthCheckResponse.
 * Use `create(HealthCheckResponseSchema)` to create a new message.
 */
export const HealthCheckResponseSchema: GenMessage<HealthCheckResponse> = /*@__PURE__*/
  messageDesc(file_geospatial, 17);

/**
 * Definición de servicios
 *
 * @generated from service geospatial.GeospatialService
 */
export const GeospatialService: GenService<{
  /**
   * Ejemplos de hello world y parametro para de echo
   *
   * @generated from rpc geospatial.GeospatialService.HelloWorld
   */
  helloWorld: {
    methodKind: "unary";
    input: typeof HelloWorldRequestSchema;
    output: typeof HelloWorldResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.EchoParameter
   */
  echoParameter: {
    methodKind: "unary";
    input: typeof EchoParameterRequestSchema;
    output: typeof EchoParameterResponseSchema;
  },
  /**
   * Health check (Para ver si gRPC esta funcionando)
   *
   * @generated from rpc geospatial.GeospatialService.HealthCheck
   */
  healthCheck: {
    methodKind: "unary";
    input: typeof HealthCheckRequestSchema;
    output: typeof HealthCheckResponseSchema;
  },
  /**
   * Funciones de prueba en python para obtener datos 
   *
   * @generated from rpc geospatial.GeospatialService.GetFeatures
   */
  getFeatures: {
    methodKind: "unary";
    input: typeof GetFeaturesRequestSchema;
    output: typeof GetFeaturesResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.GetBatchDataStreamed
   */
  getBatchDataStreamed: {
    methodKind: "server_streaming";
    input: typeof GetBatchDataRequestSchema;
    output: typeof GetBatchDataChunkSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_geospatial, 0);

