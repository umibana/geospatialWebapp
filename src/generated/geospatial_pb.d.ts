// @generated by protoc-gen-es v1.10.1
// @generated from file geospatial.proto (package geospatial, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Common data types for geospatial operations
 *
 * @generated from message geospatial.Coordinate
 */
export declare class Coordinate extends Message<Coordinate> {
  /**
   * @generated from field: double latitude = 1;
   */
  latitude: number;

  /**
   * @generated from field: double longitude = 2;
   */
  longitude: number;

  /**
   * @generated from field: optional double altitude = 3;
   */
  altitude?: number;

  constructor(data?: PartialMessage<Coordinate>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "geospatial.Coordinate";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Coordinate;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Coordinate;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Coordinate;

  static equals(a: Coordinate | PlainMessage<Coordinate> | undefined, b: Coordinate | PlainMessage<Coordinate> | undefined): boolean;
}

/**
 * @generated from message geospatial.BoundingBox
 */
export declare class BoundingBox extends Message<BoundingBox> {
  /**
   * @generated from field: geospatial.Coordinate northeast = 1;
   */
  northeast?: Coordinate;

  /**
   * @generated from field: geospatial.Coordinate southwest = 2;
   */
  southwest?: Coordinate;

  constructor(data?: PartialMessage<BoundingBox>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "geospatial.BoundingBox";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BoundingBox;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BoundingBox;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BoundingBox;

  static equals(a: BoundingBox | PlainMessage<BoundingBox> | undefined, b: BoundingBox | PlainMessage<BoundingBox> | undefined): boolean;
}

/**
 * @generated from message geospatial.GeospatialFeature
 */
export declare class GeospatialFeature extends Message<GeospatialFeature> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: geospatial.Coordinate location = 3;
   */
  location?: Coordinate;

  /**
   * @generated from field: map<string, string> properties = 4;
   */
  properties: { [key: string]: string };

  /**
   * @generated from field: int64 timestamp = 5;
   */
  timestamp: bigint;

  constructor(data?: PartialMessage<GeospatialFeature>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "geospatial.GeospatialFeature";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GeospatialFeature;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GeospatialFeature;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GeospatialFeature;

  static equals(a: GeospatialFeature | PlainMessage<GeospatialFeature> | undefined, b: GeospatialFeature | PlainMessage<GeospatialFeature> | undefined): boolean;
}

/**
 * @generated from message geospatial.DataPoint
 */
export declare class DataPoint extends Message<DataPoint> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: geospatial.Coordinate location = 2;
   */
  location?: Coordinate;

  /**
   * @generated from field: double value = 3;
   */
  value: number;

  /**
   * @generated from field: string unit = 4;
   */
  unit: string;

  /**
   * @generated from field: int64 timestamp = 5;
   */
  timestamp: bigint;

  /**
   * @generated from field: map<string, string> metadata = 6;
   */
  metadata: { [key: string]: string };

  constructor(data?: PartialMessage<DataPoint>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "geospatial.DataPoint";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DataPoint;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DataPoint;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DataPoint;

  static equals(a: DataPoint | PlainMessage<DataPoint> | undefined, b: DataPoint | PlainMessage<DataPoint> | undefined): boolean;
}

/**
 * Request/Response messages for unary calls
 *
 * @generated from message geospatial.GetFeaturesRequest
 */
export declare class GetFeaturesRequest extends Message<GetFeaturesRequest> {
  /**
   * @generated from field: geospatial.BoundingBox bounds = 1;
   */
  bounds?: BoundingBox;

  /**
   * @generated from field: repeated string feature_types = 2;
   */
  featureTypes: string[];

  /**
   * @generated from field: int32 limit = 3;
   */
  limit: number;

  constructor(data?: PartialMessage<GetFeaturesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "geospatial.GetFeaturesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFeaturesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFeaturesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFeaturesRequest;

  static equals(a: GetFeaturesRequest | PlainMessage<GetFeaturesRequest> | undefined, b: GetFeaturesRequest | PlainMessage<GetFeaturesRequest> | undefined): boolean;
}

/**
 * @generated from message geospatial.GetFeaturesResponse
 */
export declare class GetFeaturesResponse extends Message<GetFeaturesResponse> {
  /**
   * @generated from field: repeated geospatial.GeospatialFeature features = 1;
   */
  features: GeospatialFeature[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;

  constructor(data?: PartialMessage<GetFeaturesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "geospatial.GetFeaturesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFeaturesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFeaturesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFeaturesResponse;

  static equals(a: GetFeaturesResponse | PlainMessage<GetFeaturesResponse> | undefined, b: GetFeaturesResponse | PlainMessage<GetFeaturesResponse> | undefined): boolean;
}

/**
 * @generated from message geospatial.StreamDataRequest
 */
export declare class StreamDataRequest extends Message<StreamDataRequest> {
  /**
   * @generated from field: geospatial.BoundingBox bounds = 1;
   */
  bounds?: BoundingBox;

  /**
   * @generated from field: repeated string data_types = 2;
   */
  dataTypes: string[];

  /**
   * @generated from field: int32 max_points_per_second = 3;
   */
  maxPointsPerSecond: number;

  constructor(data?: PartialMessage<StreamDataRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "geospatial.StreamDataRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StreamDataRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StreamDataRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StreamDataRequest;

  static equals(a: StreamDataRequest | PlainMessage<StreamDataRequest> | undefined, b: StreamDataRequest | PlainMessage<StreamDataRequest> | undefined): boolean;
}

/**
 * @generated from message geospatial.HealthCheckRequest
 */
export declare class HealthCheckRequest extends Message<HealthCheckRequest> {
  constructor(data?: PartialMessage<HealthCheckRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "geospatial.HealthCheckRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthCheckRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthCheckRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthCheckRequest;

  static equals(a: HealthCheckRequest | PlainMessage<HealthCheckRequest> | undefined, b: HealthCheckRequest | PlainMessage<HealthCheckRequest> | undefined): boolean;
}

/**
 * @generated from message geospatial.HealthCheckResponse
 */
export declare class HealthCheckResponse extends Message<HealthCheckResponse> {
  /**
   * @generated from field: bool healthy = 1;
   */
  healthy: boolean;

  /**
   * @generated from field: string version = 2;
   */
  version: string;

  /**
   * @generated from field: map<string, string> status = 3;
   */
  status: { [key: string]: string };

  constructor(data?: PartialMessage<HealthCheckResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "geospatial.HealthCheckResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): HealthCheckResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): HealthCheckResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): HealthCheckResponse;

  static equals(a: HealthCheckResponse | PlainMessage<HealthCheckResponse> | undefined, b: HealthCheckResponse | PlainMessage<HealthCheckResponse> | undefined): boolean;
}

