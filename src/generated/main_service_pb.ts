// @generated by protoc-gen-es v2.7.0 with parameter "target=ts"
// @generated from file main_service.proto (package geospatial, syntax proto3)
/* eslint-disable */

import type { GenFile, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { ColumnarDataChunkSchema, EchoParameterRequestSchema, EchoParameterResponseSchema, GetBatchDataChunkSchema, GetBatchDataColumnarResponseSchema, GetBatchDataRequestSchema, GetFeaturesRequestSchema, GetFeaturesResponseSchema, HealthCheckRequestSchema, HealthCheckResponseSchema, HelloWorldRequestSchema, HelloWorldResponseSchema } from "./geospatial_pb";
import { file_geospatial } from "./geospatial_pb";
import type { AnalyzeCsvRequestSchema, AnalyzeCsvResponseSchema, GetLoadedDataChunkRequestSchema, GetLoadedDataChunkResponseSchema, GetLoadedDataStatsRequestSchema, GetLoadedDataStatsResponseSchema, SendFileRequestSchema, SendFileResponseSchema } from "./files_pb";
import { file_files } from "./files_pb";
import type { AnalyzeCsvForProjectRequestSchema, AnalyzeCsvForProjectResponseSchema, CreateFileRequestSchema, CreateFileResponseSchema, CreateProjectRequestSchema, CreateProjectResponseSchema, DeleteFileRequestSchema, DeleteFileResponseSchema, DeleteProjectRequestSchema, DeleteProjectResponseSchema, GetDatasetDataRequestSchema, GetDatasetDataResponseSchema, GetProjectFilesRequestSchema, GetProjectFilesResponseSchema, GetProjectRequestSchema, GetProjectResponseSchema, GetProjectsRequestSchema, GetProjectsResponseSchema, ProcessDatasetRequestSchema, ProcessDatasetResponseSchema, UpdateProjectRequestSchema, UpdateProjectResponseSchema } from "./projects_pb";
import { file_projects } from "./projects_pb";

/**
 * Describes the file main_service.proto.
 */
export const file_main_service: GenFile = /*@__PURE__*/
  fileDesc("ChJtYWluX3NlcnZpY2UucHJvdG8SCmdlb3NwYXRpYWwyhQ8KEUdlb3NwYXRpYWxTZXJ2aWNlEksKCkhlbGxvV29ybGQSHS5nZW9zcGF0aWFsLkhlbGxvV29ybGRSZXF1ZXN0Gh4uZ2Vvc3BhdGlhbC5IZWxsb1dvcmxkUmVzcG9uc2USVAoNRWNob1BhcmFtZXRlchIgLmdlb3NwYXRpYWwuRWNob1BhcmFtZXRlclJlcXVlc3QaIS5nZW9zcGF0aWFsLkVjaG9QYXJhbWV0ZXJSZXNwb25zZRJOCgtIZWFsdGhDaGVjaxIeLmdlb3NwYXRpYWwuSGVhbHRoQ2hlY2tSZXF1ZXN0Gh8uZ2Vvc3BhdGlhbC5IZWFsdGhDaGVja1Jlc3BvbnNlEk4KC0dldEZlYXR1cmVzEh4uZ2Vvc3BhdGlhbC5HZXRGZWF0dXJlc1JlcXVlc3QaHy5nZW9zcGF0aWFsLkdldEZlYXR1cmVzUmVzcG9uc2USWAoUR2V0QmF0Y2hEYXRhU3RyZWFtZWQSHy5nZW9zcGF0aWFsLkdldEJhdGNoRGF0YVJlcXVlc3QaHS5nZW9zcGF0aWFsLkdldEJhdGNoRGF0YUNodW5rMAESYQoUR2V0QmF0Y2hEYXRhQ29sdW1uYXISHy5nZW9zcGF0aWFsLkdldEJhdGNoRGF0YVJlcXVlc3QaKC5nZW9zcGF0aWFsLkdldEJhdGNoRGF0YUNvbHVtbmFyUmVzcG9uc2USYAocR2V0QmF0Y2hEYXRhQ29sdW1uYXJTdHJlYW1lZBIfLmdlb3NwYXRpYWwuR2V0QmF0Y2hEYXRhUmVxdWVzdBodLmdlb3NwYXRpYWwuQ29sdW1uYXJEYXRhQ2h1bmswARJLCgpBbmFseXplQ3N2Eh0uZ2Vvc3BhdGlhbC5BbmFseXplQ3N2UmVxdWVzdBoeLmdlb3NwYXRpYWwuQW5hbHl6ZUNzdlJlc3BvbnNlEkUKCFNlbmRGaWxlEhsuZ2Vvc3BhdGlhbC5TZW5kRmlsZVJlcXVlc3QaHC5nZW9zcGF0aWFsLlNlbmRGaWxlUmVzcG9uc2USYwoSR2V0TG9hZGVkRGF0YVN0YXRzEiUuZ2Vvc3BhdGlhbC5HZXRMb2FkZWREYXRhU3RhdHNSZXF1ZXN0GiYuZ2Vvc3BhdGlhbC5HZXRMb2FkZWREYXRhU3RhdHNSZXNwb25zZRJjChJHZXRMb2FkZWREYXRhQ2h1bmsSJS5nZW9zcGF0aWFsLkdldExvYWRlZERhdGFDaHVua1JlcXVlc3QaJi5nZW9zcGF0aWFsLkdldExvYWRlZERhdGFDaHVua1Jlc3BvbnNlElQKDUNyZWF0ZVByb2plY3QSIC5nZW9zcGF0aWFsLkNyZWF0ZVByb2plY3RSZXF1ZXN0GiEuZ2Vvc3BhdGlhbC5DcmVhdGVQcm9qZWN0UmVzcG9uc2USTgoLR2V0UHJvamVjdHMSHi5nZW9zcGF0aWFsLkdldFByb2plY3RzUmVxdWVzdBofLmdlb3NwYXRpYWwuR2V0UHJvamVjdHNSZXNwb25zZRJLCgpHZXRQcm9qZWN0Eh0uZ2Vvc3BhdGlhbC5HZXRQcm9qZWN0UmVxdWVzdBoeLmdlb3NwYXRpYWwuR2V0UHJvamVjdFJlc3BvbnNlElQKDVVwZGF0ZVByb2plY3QSIC5nZW9zcGF0aWFsLlVwZGF0ZVByb2plY3RSZXF1ZXN0GiEuZ2Vvc3BhdGlhbC5VcGRhdGVQcm9qZWN0UmVzcG9uc2USVAoNRGVsZXRlUHJvamVjdBIgLmdlb3NwYXRpYWwuRGVsZXRlUHJvamVjdFJlcXVlc3QaIS5nZW9zcGF0aWFsLkRlbGV0ZVByb2plY3RSZXNwb25zZRJLCgpDcmVhdGVGaWxlEh0uZ2Vvc3BhdGlhbC5DcmVhdGVGaWxlUmVxdWVzdBoeLmdlb3NwYXRpYWwuQ3JlYXRlRmlsZVJlc3BvbnNlEloKD0dldFByb2plY3RGaWxlcxIiLmdlb3NwYXRpYWwuR2V0UHJvamVjdEZpbGVzUmVxdWVzdBojLmdlb3NwYXRpYWwuR2V0UHJvamVjdEZpbGVzUmVzcG9uc2USSwoKRGVsZXRlRmlsZRIdLmdlb3NwYXRpYWwuRGVsZXRlRmlsZVJlcXVlc3QaHi5nZW9zcGF0aWFsLkRlbGV0ZUZpbGVSZXNwb25zZRJpChRBbmFseXplQ3N2Rm9yUHJvamVjdBInLmdlb3NwYXRpYWwuQW5hbHl6ZUNzdkZvclByb2plY3RSZXF1ZXN0GiguZ2Vvc3BhdGlhbC5BbmFseXplQ3N2Rm9yUHJvamVjdFJlc3BvbnNlElcKDlByb2Nlc3NEYXRhc2V0EiEuZ2Vvc3BhdGlhbC5Qcm9jZXNzRGF0YXNldFJlcXVlc3QaIi5nZW9zcGF0aWFsLlByb2Nlc3NEYXRhc2V0UmVzcG9uc2USVwoOR2V0RGF0YXNldERhdGESIS5nZW9zcGF0aWFsLkdldERhdGFzZXREYXRhUmVxdWVzdBoiLmdlb3NwYXRpYWwuR2V0RGF0YXNldERhdGFSZXNwb25zZWIGcHJvdG8z", [file_geospatial, file_files, file_projects]);

/**
 * Aggregated service combining all RPC methods from different domains
 *
 * @generated from service geospatial.GeospatialService
 */
export const GeospatialService: GenService<{
  /**
   * Basic services (from geospatial.proto)
   *
   * @generated from rpc geospatial.GeospatialService.HelloWorld
   */
  helloWorld: {
    methodKind: "unary";
    input: typeof HelloWorldRequestSchema;
    output: typeof HelloWorldResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.EchoParameter
   */
  echoParameter: {
    methodKind: "unary";
    input: typeof EchoParameterRequestSchema;
    output: typeof EchoParameterResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.HealthCheck
   */
  healthCheck: {
    methodKind: "unary";
    input: typeof HealthCheckRequestSchema;
    output: typeof HealthCheckResponseSchema;
  },
  /**
   * Geospatial data methods (from geospatial.proto)
   *
   * @generated from rpc geospatial.GeospatialService.GetFeatures
   */
  getFeatures: {
    methodKind: "unary";
    input: typeof GetFeaturesRequestSchema;
    output: typeof GetFeaturesResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.GetBatchDataStreamed
   */
  getBatchDataStreamed: {
    methodKind: "server_streaming";
    input: typeof GetBatchDataRequestSchema;
    output: typeof GetBatchDataChunkSchema;
  },
  /**
   * New columnar format for efficient large dataset processing
   *
   * @generated from rpc geospatial.GeospatialService.GetBatchDataColumnar
   */
  getBatchDataColumnar: {
    methodKind: "unary";
    input: typeof GetBatchDataRequestSchema;
    output: typeof GetBatchDataColumnarResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.GetBatchDataColumnarStreamed
   */
  getBatchDataColumnarStreamed: {
    methodKind: "server_streaming";
    input: typeof GetBatchDataRequestSchema;
    output: typeof ColumnarDataChunkSchema;
  },
  /**
   * CSV file processing methods (from files.proto)
   *
   * @generated from rpc geospatial.GeospatialService.AnalyzeCsv
   */
  analyzeCsv: {
    methodKind: "unary";
    input: typeof AnalyzeCsvRequestSchema;
    output: typeof AnalyzeCsvResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.SendFile
   */
  sendFile: {
    methodKind: "unary";
    input: typeof SendFileRequestSchema;
    output: typeof SendFileResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.GetLoadedDataStats
   */
  getLoadedDataStats: {
    methodKind: "unary";
    input: typeof GetLoadedDataStatsRequestSchema;
    output: typeof GetLoadedDataStatsResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.GetLoadedDataChunk
   */
  getLoadedDataChunk: {
    methodKind: "unary";
    input: typeof GetLoadedDataChunkRequestSchema;
    output: typeof GetLoadedDataChunkResponseSchema;
  },
  /**
   * Project management methods (from projects.proto)
   *
   * @generated from rpc geospatial.GeospatialService.CreateProject
   */
  createProject: {
    methodKind: "unary";
    input: typeof CreateProjectRequestSchema;
    output: typeof CreateProjectResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.GetProjects
   */
  getProjects: {
    methodKind: "unary";
    input: typeof GetProjectsRequestSchema;
    output: typeof GetProjectsResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.GetProject
   */
  getProject: {
    methodKind: "unary";
    input: typeof GetProjectRequestSchema;
    output: typeof GetProjectResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.UpdateProject
   */
  updateProject: {
    methodKind: "unary";
    input: typeof UpdateProjectRequestSchema;
    output: typeof UpdateProjectResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.DeleteProject
   */
  deleteProject: {
    methodKind: "unary";
    input: typeof DeleteProjectRequestSchema;
    output: typeof DeleteProjectResponseSchema;
  },
  /**
   * File management methods (from projects.proto)
   *
   * @generated from rpc geospatial.GeospatialService.CreateFile
   */
  createFile: {
    methodKind: "unary";
    input: typeof CreateFileRequestSchema;
    output: typeof CreateFileResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.GetProjectFiles
   */
  getProjectFiles: {
    methodKind: "unary";
    input: typeof GetProjectFilesRequestSchema;
    output: typeof GetProjectFilesResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.DeleteFile
   */
  deleteFile: {
    methodKind: "unary";
    input: typeof DeleteFileRequestSchema;
    output: typeof DeleteFileResponseSchema;
  },
  /**
   * Enhanced CSV processing for projects (from projects.proto)
   *
   * @generated from rpc geospatial.GeospatialService.AnalyzeCsvForProject
   */
  analyzeCsvForProject: {
    methodKind: "unary";
    input: typeof AnalyzeCsvForProjectRequestSchema;
    output: typeof AnalyzeCsvForProjectResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.ProcessDataset
   */
  processDataset: {
    methodKind: "unary";
    input: typeof ProcessDatasetRequestSchema;
    output: typeof ProcessDatasetResponseSchema;
  },
  /**
   * @generated from rpc geospatial.GeospatialService.GetDatasetData
   */
  getDatasetData: {
    methodKind: "unary";
    input: typeof GetDatasetDataRequestSchema;
    output: typeof GetDatasetDataResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_main_service, 0);

